plot_for_ncvreg <- function(x, alpha=1, log.l=FALSE, shade=FALSE, label=F,...) {
  YY <- if (length(x$penalty.factor)==nrow(x$beta)) coef(x) else coef(x)[-1,,drop=FALSE]
  penalized <- which(x$penalty.factor!=0)
  nonzero <- which(apply(abs(YY), 1, sum)!=0)
  ind <- intersect(penalized, nonzero)
  Y <- YY[ind, , drop=FALSE]
  p <- nrow(Y)
  l <- x$lambda
  
  #print(Y)
  
  if (log.l) {
    l <- log(l)
    xlab <- expression(log(lambda))
  } else xlab <- expression(lambda)
  plot.args <- list(x=l, y=1:length(l), ylim=range(Y), xlab=xlab, ylab="", type="n", xlim=c(rev(range(c(l,min(l)-abs(max(l)-min(l))*0.1)))), las=1)
  new.args <- list(...)
  if (length(new.args)) plot.args[names(new.args)] <- new.args
  do.call("matplot", plot.args)
  if (!is.element("ylab", names(new.args))) mtext(expression(hat(beta)), side=2, cex=par("cex"), line=3, las=1)
  if (shade & !is.null(x$convex.min)) {
    l1 <- l[x$convex.min]
    l2 <- min(l)
    polygon(x=c(l1,l2,l2,l1),y=c(plot.args$ylim[1],plot.args$ylim[1],plot.args$ylim[2],plot.args$ylim[2]),col="gray85",border=FALSE) 
  }
  #axis(3, col = "gold", lty = 2, lwd = 0.5)
  
  index = l
  atdf = pretty(index)
  df = as.vector(apply(x$beta,2, FUN=function(s) sum(s[-1]!= 0)))
  approx.f = 0
  prettydf = approx(x = index, y = df, xout = atdf, rule = 2, 
                    method = "constant", f = approx.f)$y
  
  axis(3, at = atdf, labels = prettydf, tcl = NA)
  
  cols <- hcl(h=seq(15, 375, len=max(4, p+1)), l=60, c=150, alpha=alpha)
  cols <- if (p==2) cols[c(1,3)] else cols[1:p]  
  line.args <- list(col=cols, lwd=1+2*exp(-p/20), lty=1)
  if (length(new.args)) line.args[names(new.args)] <- new.args
  line.args$x <- l
  line.args$y <- t(Y)
  do.call("matlines",line.args)
  
  if (label) {
    beta <- x$beta
    
    # if(log.l){
    # xpos <- min(log(index))
    # }else{
    # xpos <- min(index)  
    # }
    
    xpos <- min(index) 
    xpos <- rep(xpos, (nrow(beta)-1))
    ypos = beta[2:nrow(beta), ncol(beta)]
    
    pos = 4

    text(xpos, ypos, rownames(beta)[2:length(rownames(beta))], cex = 0.5, pos = pos)
  }
  abline(h=0)
}
